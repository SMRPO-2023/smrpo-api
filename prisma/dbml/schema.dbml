//// ------------------------------------------------------
//// THIS FILE WAS AUTOMATICALLY GENERATED (DO NOT MODIFY)
//// ------------------------------------------------------

Table User {
  id Int [pk, increment]
  createdAt DateTime [default: `now()`, not null]
  updatedAt DateTime [not null]
  deletedAt DateTime
  lastLogin DateTime
  username String [unique, not null]
  email String [unique, not null]
  password String [not null]
  firstname String
  lastname String
  role Role [not null, default: 'USER']
  storyComment StoryComment [not null]
  developerProjects ProjectDeveloper [not null]
  tasks Task [not null]
  timeLogs TimeLog [not null]
  posts Post [not null]
  projectOwnerProjects Project [not null]
  ScrumMasterProjects Project [not null]
}

Table Sprint {
  id Int [pk, increment]
  createdAt DateTime [default: `now()`, not null]
  updatedAt DateTime [not null]
  deletedAt DateTime
  start DateTime [not null]
  end DateTime [not null]
  velocity Int [not null]
  Project Project
  projectId Int
  UserStories UserStory [not null]
  name String
}

Table StoryComment {
  id Int [pk, increment]
  createdAt DateTime [default: `now()`, not null]
  updatedAt DateTime [not null]
  deletedAt DateTime
  userStoryId Int [not null]
  message String [not null]
  User User [not null]
  userId Int [not null]
  UserStory UserStory [not null]
}

Table Task {
  id Int [pk, increment]
  createdAt DateTime [default: `now()`, not null]
  updatedAt DateTime [not null]
  deletedAt DateTime
  title String [not null]
  description String
  hours Int [not null]
  accepted Boolean [not null]
  status TaskStatus [not null, default: 'UNASSIGNED']
  assignedTo User
  userId Int
  timeLogs TimeLog [not null]
  userStory UserStory
  userStoryId Int
}

Table UserStory {
  id Int [pk, increment]
  createdAt DateTime [default: `now()`, not null]
  updatedAt DateTime [not null]
  deletedAt DateTime
  title String [not null]
  description String
  priority StoryPriority [not null]
  points Int
  implemented Boolean [not null, default: false]
  projectId Int [not null]
  project Project [not null]
  sprintId Int
  acceptanceCriteria AcceptanceCriteria [not null]
  comments StoryComment [not null]
  Task Task [not null]
  businessValue Int
  Sprint Sprint
}

Table TimeLog {
  id Int [pk, increment]
  createdAt DateTime [default: `now()`, not null]
  updatedAt DateTime [not null]
  deletedAt DateTime
  day DateTime [not null]
  hours Int [not null]
  User User
  userId Int
  Task Task
  taskId Int
}

Table AcceptanceCriteria {
  id Int [pk, increment]
  createdAt DateTime [default: `now()`, not null]
  updatedAt DateTime [not null]
  deletedAt DateTime
  userStoryId Int [not null]
  title String [not null]
  description String
  completed Boolean [not null, default: false]
  UserStory UserStory [not null]
}

Table Post {
  id Int [pk, increment]
  message String [not null]
  createdAt DateTime [default: `now()`, not null]
  updatedAt DateTime [not null]
  deletedAt DateTime
  published Boolean [not null]
  title String [not null]
  content String
  user User
  userId Int
  Project Project
  projectId Int
}

Table ProjectDeveloper {
  id Int [pk, increment]
  createdAt DateTime [default: `now()`, not null]
  updatedAt DateTime [not null]
  deletedAt DateTime
  user User [not null]
  userId Int [not null]
  project Project [not null]
  projectId Int [not null]

  indexes {
    (userId, projectId) [unique]
  }
}

Table Project {
  id Int [pk, increment]
  createdAt DateTime [default: `now()`, not null]
  updatedAt DateTime [not null]
  deletedAt DateTime
  title String
  documentation String
  projectOwner User
  scrumMaster User
  developers ProjectDeveloper [not null]
  sprints Sprint [not null]
  posts Post [not null]
  UserStory UserStory [not null]
  projectOwnerId Int
  scrumMasterId Int
}

Enum Role {
  ADMIN
  USER
}

Enum TaskStatus {
  UNASSIGNED
  ASSIGNED
  FINISHED
  ACTIVE
}

Enum StoryPriority {
  MUST_HAVE
  COULD_HAVE
  SHOULD_HAVE
  WONT_HAVE
}

Ref: Sprint.projectId > Project.id

Ref: StoryComment.userId > User.id

Ref: StoryComment.userStoryId > UserStory.id

Ref: Task.userId > User.id

Ref: Task.userStoryId > UserStory.id

Ref: UserStory.projectId > Project.id

Ref: UserStory.sprintId > Sprint.id

Ref: TimeLog.userId > User.id

Ref: TimeLog.taskId > Task.id

Ref: AcceptanceCriteria.userStoryId > UserStory.id

Ref: Post.userId > User.id

Ref: Post.projectId > Project.id

Ref: ProjectDeveloper.userId > User.id

Ref: ProjectDeveloper.projectId > Project.id

Ref: Project.projectOwnerId > User.id

Ref: Project.scrumMasterId > User.id